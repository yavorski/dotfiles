#!/usr/bin/env bash

export BAK_DIR=~/.dot-bak

function rmbackup() {
  rm -r $BAK_DIR
}

function backup() {
  rm -r $BAK_DIR
  mkdir -p $BAK_DIR

  [ -f ~/.bashrc ] && cp ~/.bashrc $BAK_DIR
  [ -f ~/.bash_profile ] && cp ~/.bash_profile $BAK_DIR
  [ -f ~/.inputrc ] && cp ~/.inputrc $BAK_DIR
  [ -f ~/.gitconfig ] && cp ~/.gitconfig $BAK_DIR
  [ -f ~/.vimrc ] && cp ~/.vimrc $BAK_DIR
  [ -f ~/.gvimrc ] && cp ~/.gvimrc $BAK_DIR
  [ -f ~/.config/nvim/init.vim ] && cp ~/.config/nvim/init.vim $BAK_DIR
  [ -f ~/.config/nvim/ginit.vim ] && cp ~/.config/nvim/ginit.vim $BAK_DIR
}

batdiff() {
  git diff --name-only --diff-filter=d | xargs bat --diff
}

function setup_npm_global_dir() {
  mkdir -p $HOME/.npm-global
  npm config set prefix $HOME/.npm-global

  # ./bash/.exports
  # export PATH=$HOME/.npm-global/bin:$PATH

  # alternative with env var only
  # export NPM_CONFIG_PREFIX=$HOME/.npm-global
}

function setup_i3() {
  local id=$1

  mv ~/.config/i3/"${id}".config ~/.config/i3/config
  mv ~/.config/i3status/"${id}".config ~/.config/i3status/config

  rm -r ~/.config/i3/*.config
  rm -r ~/.config/i3status/*.config
}

function show_colors() {
  for fgbg in 38 48 ; do # Foreground / Background
    for color in {0..255} ; do # Colors
      # Display the color
      printf "\e[${fgbg};5;%sm  %3s  \e[0m" $color $color
      # Display 6 colors per lines
      if [ $((($color + 1) % 6)) == 4 ] ; then
        echo # New line
      fi
    done
    echo # New line
  done
}

function mkd() {
  mkdir -p "$@" && cd "$_";
}

# Show all the names (CNs and SANs) listed in the SSL certificate for a given domain
function getcertnames() {
  if [ -z "${1}" ]; then
    echo "ERROR: No domain specified.";
    return 1;
  fi;

  local domain="${1}";
  echo "Testing ${domain} â€¦";
  echo ""; # newline

  local tmp=$(echo -e "GET / HTTP/1.0\nEOT" | openssl s_client -connect "${domain}:443" -servername "${domain}" 2>&1);

  if [[ "${tmp}" = *"-----BEGIN CERTIFICATE-----"* ]]; then
    local certText=$(echo "${tmp}" | openssl x509 -text -certopt "no_aux, no_header, no_issuer, no_pubkey, no_serial, no_sigdump, no_signame, no_validity, no_version");
    echo "Common Name:";
    echo ""; # newline
    echo "${certText}" | grep "Subject:" | sed -e "s/^.*CN=//" | sed -e "s/\/emailAddress=.*//";
    echo ""; # newline
    echo "Subject Alternative Name(s):";
    echo ""; # newline
    echo "${certText}" | grep -A 1 "Subject Alternative Name:" | sed -e "2s/DNS://g" -e "s/ //g" | tr "," "\n" | tail -n +2;
    return 0;
  else
    echo "ERROR: Certificate not found.";
    return 1;
  fi;
}
